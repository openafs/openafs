#!/usr/bin/env perl
#
# Copyright (c) 2020 Sine Nomine Associates. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

use strict;
use warnings;
use lib $ENV{C_TAP_SOURCE} . "/tests-lib/perl5";

use afstest qw(src_path obj_path);
use Test::More;
use File::Temp qw/tempdir/;
use Cwd qw/abs_path getcwd/;
use File::Compare;
use Sys::Hostname;
use Socket;

# Run tests/auth/genkeyfiles, and check that the KeyFile that it generates
# matches what we expect.

if (!defined(gethostbyname(hostname()))) {
    # genkeyfiles needs a hostname to generate a config dir
    plan skip_all => 'Cannot resolve hostname';
}
plan tests => 2;

my $cmd = obj_path("tests/auth/genkeyfiles");
my $cmd_wrapper = obj_path("tests/cmdwrap");
$cmd = abs_path($cmd);

my $keyfile = src_path("tests/auth/KeyFile.short");
$keyfile = abs_path($keyfile);
my $keyfileext = abs_path(src_path("tests/auth/KeyFileExt"));

my $origdir = getcwd();
my $dir = tempdir('afs_XXXXXX', CLEANUP => 1);

chdir($dir)
    or die("chdir $dir failed: $?");

system($cmd_wrapper, $cmd) == 0
    or die("$cmd failed: $?");

ok(compare("KeyFile", $keyfile) == 0,
   "genkeyfiles generates expected KeyFile");
ok(compare("KeyFileExt", $keyfileext) == 0,
   "genkeyfiles generates expected KeyFileExt");

# The cleanup handler needs to run in the original directory.
chdir($origdir)
    or die("chdir $origdir failed: $?");
